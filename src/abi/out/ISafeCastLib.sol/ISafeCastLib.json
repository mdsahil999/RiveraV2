{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "toInt128",
      "outputs": [
        {
          "internalType": "int128",
          "name": "",
          "type": "int128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "toInt256",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "toUint160",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "toInt128(int256)": "dd2a0316",
    "toInt256(uint256)": "dfbe873b",
    "toUint160(uint256)": "dfef6beb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"toInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"toInt256\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"toUint160\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"toInt128(int256)\":{\"params\":{\"y\":\"The int256 to be downcasted\"},\"returns\":{\"_0\":\"z The downcasted integer, now type int128\"}},\"toInt256(uint256)\":{\"params\":{\"y\":\"The uint256 to be casted\"},\"returns\":{\"_0\":\"z The casted integer, now type int256\"}},\"toUint160(uint256)\":{\"params\":{\"y\":\"The uint256 to be downcasted\"},\"returns\":{\"_0\":\"z The downcasted integer, now type uint160\"}}},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"toInt128(int256)\":{\"notice\":\"Cast a int256 to a int128, revert on overflow or underflow\"},\"toInt256(uint256)\":{\"notice\":\"Cast a uint256 to a int256, revert on overflow\"},\"toUint160(uint256)\":{\"notice\":\"Cast a uint256 to a uint160, revert on overflow\"}},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/strategies/cake/interfaces/libraries/ISafeCastLib.sol\":\"ISafeCastLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pancakeswap-v2-core/=lib/pancake-swap-core/contracts/\",\":@pancakeswap-v2-exchange-protocol/=lib/pancake-smart-contracts/projects/exchange-protocol/contracts/\",\":@pancakeswap-v3-core/=lib/pancake-v3-contracts/projects/v3-core/contracts/\",\":@pancakeswap-v3-masterchef/=lib/pancake-v3-contracts/projects/masterchef-v3/contracts/\",\":@pancakeswap-v3-periphery/=lib/pancake-v3-contracts/projects/v3-periphery/contracts/\",\":@pancakeswap-v3-router/=lib/pancake-v3-contracts/projects/router/contracts/\",\":@pancakeswap/=lib/pancake-v3-contracts/projects/\",\":@rivera/=src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake-swap-core/=lib/pancake-swap-core/contracts/\",\":pancake-v3-contracts/=lib/pancake-v3-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/strategies/cake/interfaces/libraries/ISafeCastLib.sol\":{\"keccak256\":\"0xb5dc1b60745e7308ebbfcd24fb076c8ddf9a7b6fed88457d0c61afb0f070871c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bcf73c55235b326eb14fcf002f90155e70cb6c003bfe3d61a904b4e18fd2f535\",\"dweb:/ipfs/QmVqftijxtVPH8U5Rm3JVj4hK5pUS1EmokPP17WNxBG3e6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toInt128",
          "outputs": [
            {
              "internalType": "int128",
              "name": "",
              "type": "int128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toInt256",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toUint160",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "toInt128(int256)": {
            "params": {
              "y": "The int256 to be downcasted"
            },
            "returns": {
              "_0": "z The downcasted integer, now type int128"
            }
          },
          "toInt256(uint256)": {
            "params": {
              "y": "The uint256 to be casted"
            },
            "returns": {
              "_0": "z The casted integer, now type int256"
            }
          },
          "toUint160(uint256)": {
            "params": {
              "y": "The uint256 to be downcasted"
            },
            "returns": {
              "_0": "z The downcasted integer, now type uint160"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "toInt128(int256)": {
            "notice": "Cast a int256 to a int128, revert on overflow or underflow"
          },
          "toInt256(uint256)": {
            "notice": "Cast a uint256 to a int256, revert on overflow"
          },
          "toUint160(uint256)": {
            "notice": "Cast a uint256 to a uint160, revert on overflow"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@pancakeswap-v2-core/=lib/pancake-swap-core/contracts/",
        ":@pancakeswap-v2-exchange-protocol/=lib/pancake-smart-contracts/projects/exchange-protocol/contracts/",
        ":@pancakeswap-v3-core/=lib/pancake-v3-contracts/projects/v3-core/contracts/",
        ":@pancakeswap-v3-masterchef/=lib/pancake-v3-contracts/projects/masterchef-v3/contracts/",
        ":@pancakeswap-v3-periphery/=lib/pancake-v3-contracts/projects/v3-periphery/contracts/",
        ":@pancakeswap-v3-router/=lib/pancake-v3-contracts/projects/router/contracts/",
        ":@pancakeswap/=lib/pancake-v3-contracts/projects/",
        ":@rivera/=src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake-swap-core/=lib/pancake-swap-core/contracts/",
        ":pancake-v3-contracts/=lib/pancake-v3-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/strategies/cake/interfaces/libraries/ISafeCastLib.sol": "ISafeCastLib"
      },
      "libraries": {}
    },
    "sources": {
      "src/strategies/cake/interfaces/libraries/ISafeCastLib.sol": {
        "keccak256": "0xb5dc1b60745e7308ebbfcd24fb076c8ddf9a7b6fed88457d0c61afb0f070871c",
        "urls": [
          "bzz-raw://bcf73c55235b326eb14fcf002f90155e70cb6c003bfe3d61a904b4e18fd2f535",
          "dweb:/ipfs/QmVqftijxtVPH8U5Rm3JVj4hK5pUS1EmokPP17WNxBG3e6"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/strategies/cake/interfaces/libraries/ISafeCastLib.sol",
    "id": 32290,
    "exportedSymbols": {
      "ISafeCastLib": [
        32289
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:870:51",
    "nodes": [
      {
        "id": 32263,
        "nodeType": "PragmaDirective",
        "src": "46:23:51",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 32289,
        "nodeType": "ContractDefinition",
        "src": "169:745:51",
        "nodes": [
          {
            "id": 32272,
            "nodeType": "FunctionDefinition",
            "src": "371:62:51",
            "nodes": [],
            "documentation": {
              "id": 32265,
              "nodeType": "StructuredDocumentation",
              "src": "199:166:51",
              "text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
            },
            "functionSelector": "dfef6beb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "toUint160",
            "nameLocation": "380:9:51",
            "parameters": {
              "id": 32268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32267,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "398:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32272,
                  "src": "390:9:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "389:11:51"
            },
            "returnParameters": {
              "id": 32271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32272,
                  "src": "424:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 32269,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "423:9:51"
            },
            "scope": 32289,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32280,
            "nodeType": "FunctionDefinition",
            "src": "622:59:51",
            "nodes": [],
            "documentation": {
              "id": 32273,
              "nodeType": "StructuredDocumentation",
              "src": "441:175:51",
              "text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
            },
            "functionSelector": "dd2a0316",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "toInt128",
            "nameLocation": "631:8:51",
            "parameters": {
              "id": 32276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32275,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "647:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32280,
                  "src": "640:8:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 32274,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:10:51"
            },
            "returnParameters": {
              "id": 32279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32280,
                  "src": "673:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 32277,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "672:8:51"
            },
            "scope": 32289,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32288,
            "nodeType": "FunctionDefinition",
            "src": "851:60:51",
            "nodes": [],
            "documentation": {
              "id": 32281,
              "nodeType": "StructuredDocumentation",
              "src": "689:156:51",
              "text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
            },
            "functionSelector": "dfbe873b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "toInt256",
            "nameLocation": "860:8:51",
            "parameters": {
              "id": 32284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32283,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "877:1:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 32288,
                  "src": "869:9:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:11:51"
            },
            "returnParameters": {
              "id": 32287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32288,
                  "src": "903:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 32285,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "902:8:51"
            },
            "scope": 32289,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISafeCastLib",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 32264,
          "nodeType": "StructuredDocumentation",
          "src": "73:96:51",
          "text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          32289
        ],
        "name": "ISafeCastLib",
        "nameLocation": "179:12:51",
        "scope": 32290,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 51
}