{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount0Requested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1Requested",
          "type": "uint128"
        }
      ],
      "name": "collectProtocol",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "feeProtocol0",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "feeProtocol1",
          "type": "uint32"
        }
      ],
      "name": "setFeeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lmPool",
          "type": "address"
        }
      ],
      "name": "setLmPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "collectProtocol(address,uint128,uint128)": "85b66729",
    "setFeeProtocol(uint32,uint32)": "b0d0d211",
    "setLmPool(address)": "cc7e7fa2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"setLmPool(address)\":{\"notice\":\"Set the LM pool to enable liquidity mining\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/pancake-v3-contracts/projects/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol\":\"IPancakeV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pancakeswap-v2-core/=lib/pancake-swap-core/contracts/\",\":@pancakeswap-v2-exchange-protocol/=lib/pancake-smart-contracts/projects/exchange-protocol/contracts/\",\":@pancakeswap-v3-core/=lib/pancake-v3-contracts/projects/v3-core/contracts/\",\":@pancakeswap-v3-masterchef/=lib/pancake-v3-contracts/projects/masterchef-v3/contracts/\",\":@pancakeswap-v3-periphery/=lib/pancake-v3-contracts/projects/v3-periphery/contracts/\",\":@pancakeswap-v3-router/=lib/pancake-v3-contracts/projects/router/contracts/\",\":@pancakeswap/=lib/pancake-v3-contracts/projects/\",\":@rivera/=src/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":pancake-smart-contracts/=lib/pancake-smart-contracts/\",\":pancake-swap-core/=lib/pancake-swap-core/contracts/\",\":pancake-v3-contracts/=lib/pancake-v3-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/pancake-v3-contracts/projects/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0xcc52ee858f070ebea5a5df2112756f8d963178c09600371ac4c21712d6e1157a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://45547e595fcc4055a3a1e75206430eafda35fc08938622483bc01abca74b6836\",\"dweb:/ipfs/Qme8TWZFcwYdYQvai9fuFCFWHpywrmobAughzp6WgRXZEn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount0Requested",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Requested",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocol",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "feeProtocol0",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "feeProtocol1",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lmPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLmPool"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "params": {
              "amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
              "amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
              "recipient": "The address to which collected protocol fees should be sent"
            },
            "returns": {
              "amount0": "The protocol fee collected in token0",
              "amount1": "The protocol fee collected in token1"
            }
          },
          "setFeeProtocol(uint32,uint32)": {
            "params": {
              "feeProtocol0": "new protocol fee for token0 of the pool",
              "feeProtocol1": "new protocol fee for token1 of the pool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "notice": "Collect the protocol fee accrued to the pool"
          },
          "setFeeProtocol(uint32,uint32)": {
            "notice": "Set the denominator of the protocol's % share of the fees"
          },
          "setLmPool(address)": {
            "notice": "Set the LM pool to enable liquidity mining"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@pancakeswap-v2-core/=lib/pancake-swap-core/contracts/",
        ":@pancakeswap-v2-exchange-protocol/=lib/pancake-smart-contracts/projects/exchange-protocol/contracts/",
        ":@pancakeswap-v3-core/=lib/pancake-v3-contracts/projects/v3-core/contracts/",
        ":@pancakeswap-v3-masterchef/=lib/pancake-v3-contracts/projects/masterchef-v3/contracts/",
        ":@pancakeswap-v3-periphery/=lib/pancake-v3-contracts/projects/v3-periphery/contracts/",
        ":@pancakeswap-v3-router/=lib/pancake-v3-contracts/projects/router/contracts/",
        ":@pancakeswap/=lib/pancake-v3-contracts/projects/",
        ":@rivera/=src/",
        ":@uniswap/v3-core/=lib/v3-core/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":pancake-smart-contracts/=lib/pancake-smart-contracts/",
        ":pancake-swap-core/=lib/pancake-swap-core/contracts/",
        ":pancake-v3-contracts/=lib/pancake-v3-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/pancake-v3-contracts/projects/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol": "IPancakeV3PoolOwnerActions"
      },
      "libraries": {}
    },
    "sources": {
      "lib/pancake-v3-contracts/projects/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0xcc52ee858f070ebea5a5df2112756f8d963178c09600371ac4c21712d6e1157a",
        "urls": [
          "bzz-raw://45547e595fcc4055a3a1e75206430eafda35fc08938622483bc01abca74b6836",
          "dweb:/ipfs/Qme8TWZFcwYdYQvai9fuFCFWHpywrmobAughzp6WgRXZEn"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/pancake-v3-contracts/projects/v3-core/contracts/interfaces/pool/IPancakeV3PoolOwnerActions.sol",
    "id": 29236,
    "exportedSymbols": {
      "IPancakeV3PoolOwnerActions": [
        29235
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:1279:37",
    "nodes": [
      {
        "id": 29205,
        "nodeType": "PragmaDirective",
        "src": "46:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 29235,
        "nodeType": "ContractDefinition",
        "src": "192:1131:37",
        "nodes": [
          {
            "id": 29214,
            "nodeType": "FunctionDefinition",
            "src": "449:75:37",
            "nodes": [],
            "documentation": {
              "id": 29207,
              "nodeType": "StructuredDocumentation",
              "src": "236:207:37",
              "text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
            },
            "functionSelector": "b0d0d211",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeProtocol",
            "nameLocation": "458:14:37",
            "parameters": {
              "id": 29212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29209,
                  "mutability": "mutable",
                  "name": "feeProtocol0",
                  "nameLocation": "480:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29214,
                  "src": "473:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 29208,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29211,
                  "mutability": "mutable",
                  "name": "feeProtocol1",
                  "nameLocation": "501:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29214,
                  "src": "494:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 29210,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:42:37"
            },
            "returnParameters": {
              "id": 29213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:37"
            },
            "scope": 29235,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29228,
            "nodeType": "FunctionDefinition",
            "src": "1026:182:37",
            "nodes": [],
            "documentation": {
              "id": 29215,
              "nodeType": "StructuredDocumentation",
              "src": "532:488:37",
              "text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
            },
            "functionSelector": "85b66729",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collectProtocol",
            "nameLocation": "1035:15:37",
            "parameters": {
              "id": 29222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29217,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1069:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29228,
                  "src": "1061:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29219,
                  "mutability": "mutable",
                  "name": "amount0Requested",
                  "nameLocation": "1097:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29228,
                  "src": "1089:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29218,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29221,
                  "mutability": "mutable",
                  "name": "amount1Requested",
                  "nameLocation": "1132:16:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29228,
                  "src": "1124:24:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29220,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:105:37"
            },
            "returnParameters": {
              "id": 29227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29224,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1182:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29228,
                  "src": "1174:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29223,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29226,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1199:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29228,
                  "src": "1191:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 29225,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1191:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1173:34:37"
            },
            "scope": 29235,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29234,
            "nodeType": "FunctionDefinition",
            "src": "1276:44:37",
            "nodes": [],
            "documentation": {
              "id": 29229,
              "nodeType": "StructuredDocumentation",
              "src": "1216:54:37",
              "text": "@notice Set the LM pool to enable liquidity mining"
            },
            "functionSelector": "cc7e7fa2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLmPool",
            "nameLocation": "1285:9:37",
            "parameters": {
              "id": 29232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29231,
                  "mutability": "mutable",
                  "name": "lmPool",
                  "nameLocation": "1303:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 29234,
                  "src": "1295:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1294:16:37"
            },
            "returnParameters": {
              "id": 29233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1319:0:37"
            },
            "scope": 29235,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPancakeV3PoolOwnerActions",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 29206,
          "nodeType": "StructuredDocumentation",
          "src": "74:118:37",
          "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          29235
        ],
        "name": "IPancakeV3PoolOwnerActions",
        "nameLocation": "202:26:37",
        "scope": 29236,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 37
}